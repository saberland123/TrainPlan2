# analytics_dashboard.py
import sqlite3
import json
from datetime import datetime, timedelta

class AnalyticsDashboard:
    def __init__(self, db_path='fitness_bot.db'):
        self.db_path = db_path
    
    def generate_progress_text(self, user_id, days=30):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute('''
            SELECT COUNT(*) as workout_count,
                   MIN(date) as first_date,
                   MAX(date) as last_date
            FROM workouts 
            WHERE user_id = ? AND date >= date('now', ?)
        ''', (user_id, f'-{days} days'))
        
        stats = cursor.fetchone()
        conn.close()
        
        if stats and stats[0] > 0:
            workout_count, first_date, last_date = stats
            
            progress_text = f"""
üìä <b>–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days} –¥–Ω–µ–π</b>

‚úÖ <b>–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:</b>
‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {workout_count} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
‚Ä¢ –ü–µ—Ä–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: {first_date}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: {last_date}
‚Ä¢ –°—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç–æ—Ç–∞: {round(workout_count / days, 1)} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é

üèÜ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
‚Ä¢ {'–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™' if workout_count >= 12 else '–ú–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!'}
‚Ä¢ {'üî• –ò–¥–µ–∞–ª—å–Ω–∞—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å!' if workout_count >= 15 else '–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è 3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é'}
"""
        else:
            progress_text = f"""
üìä <b>–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days} –¥–Ω–µ–π</b>

üòî –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥.

üí° <b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –ù–∞—á–Ω–∏—Ç–µ —Å –∞–Ω–∫–µ—Ç—ã –∑–¥–æ—Ä–æ–≤—å—è: /health
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: /exercises
‚Ä¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ —á–µ–ª–ª–µ–Ω–¥–∂–∞–º: /challenges
"""
        
        return progress_text
    
    def export_user_data(self, user_id):
        """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        export_data = "–§–ò–¢–ù–ï–° –û–¢–ß–ï–¢\n"
        export_data += "=" * 50 + "\n\n"
        
        # –î–∞–Ω–Ω—ã–µ –∑–¥–æ—Ä–æ–≤—å—è
        cursor.execute('SELECT * FROM health_questionnaire WHERE user_id = ?', (user_id,))
        health_data = cursor.fetchone()
        if health_data:
            export_data += "–î–ê–ù–ù–´–ï –ó–î–û–†–û–í–¨–Ø:\n"
            export_data += f"–í–æ–∑—Ä–∞—Å—Ç: {health_data[1]}\n"
            export_data += f"–í–µ—Å: {health_data[2]} –∫–≥\n"
            export_data += f"–†–æ—Å—Ç: {health_data[3]} —Å–º\n"
            export_data += f"–ü–æ–ª: {health_data[4]}\n"
            export_data += f"–£—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏: {health_data[5]}\n\n"
        
        # –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        cursor.execute('SELECT * FROM workouts WHERE user_id = ? ORDER BY date', (user_id,))
        workouts = cursor.fetchall()
        if workouts:
            export_data += f"–¢–†–ï–ù–ò–†–û–í–ö–ò ({len(workouts)}):\n"
            for workout in workouts:
                export_data += f"- {workout[2]}: {workout[3]}\n"
            export_data += "\n"
        
        conn.close()
        return export_data